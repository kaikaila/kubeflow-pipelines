name: backend-postgres-integration-kustomize

on:
  push:
    branches:
      - ci/pgx-kustomize
      - feature/replace-str-with-largetext-WIP
  workflow_dispatch: {}

jobs:
  it-postgres-kustomize:
    name: Integration (pgx via Kustomize+KinD)
    runs-on: ubuntu-latest
    continue-on-error: true # Temporarily allow failures; switch to false after LargeText/storage changes land

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache: true

      - name: Create KinD cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: kfp-ci
          wait: 300s

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "5.4.2"

      - name: Install utils (psql, nc)
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client netcat-openbsd

      - name: Create namespace
        env:
          NAMESPACE: kfp-pgx-test
        run: kubectl create namespace "$NAMESPACE" || true

      - name: Deploy Postgres via Kustomize
        working-directory: manifests/kustomize/third-party/postgresql
        env:
          NAMESPACE: kfp-pgx-test
        run: |
          kustomize build ./base | kubectl -n "$NAMESPACE" apply -f -
          kubectl -n "$NAMESPACE" get all

      - name: Port-forward Postgres (match run_tests_locally.sh)
        env:
          NAMESPACE: kfp-pgx-test
        run: |
          # background port-forward to 127.0.0.3 (same as the official script)
          kubectl -n "$NAMESPACE" port-forward svc/postgres-service 5432:5432 --address="127.0.0.3" >/dev/null 2>&1 &
          echo $! > pf.pid
          # simple wait similar to the script
          sleep 10

      - name: Run backend integration tests (pgx) â€” mirror official flags
        env:
          NAMESPACE: kfp-pgx-test
        run: |
          # Exactly mirror the official script command/flags:
          go test -v ./... -namespace "$NAMESPACE" -args -runIntegrationTests=true -isDevMode=true -runPostgreSQLTests=true -localTest=true || true

      - name: Cleanup (always)
        if: always()
        run: |
          echo "==== PG Pods ===="
          kubectl -n kfp-pgx-test get pods -o wide || true
          echo "==== PG Events ===="
          kubectl -n kfp-pgx-test get events --sort-by=.lastTimestamp | tail -n 100 || true
          if [ -f pf.pid ]; then kill -9 "$(cat pf.pid)" || true; fi
